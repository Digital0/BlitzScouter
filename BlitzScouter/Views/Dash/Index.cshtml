@{
	ViewData["Title"] = "Blitz Scouter";
}
@model List<BSTeam>

<h1 class="top-elem">Leaderboard</h1>
<div style="overflow-x: scroll;">
	<table class="table table-striped table-sm" id="sortable">
		<tr>
			<th></th>
			<th>Team</th>
			@{
				int c = 2;
				for (int i = 0; i < BSConfig.c.matchScout.Count; i++)
				{
					if (BSConfig.c.matchScout[i].type == "checkbox")
					{
						<th>@BSConfig.c.matchScout[i].text</th>
						c++;
					}
				}

				for (int i = 0; i < BSConfig.c.matchScout.Count; i++)
				{
					if (BSConfig.c.matchScout[i].type == "counter")
					{
						<th>@BSConfig.c.matchScout[i].text</th>
						c++;
					}
				}
			}
			<!--<th>Comments</th>-->
		</tr>
		@for (var o = 0; o < Model.Count; o++)
		{
			BSTeam tm = Model[o];
			<tr>
				<td style="font-weight:bold;">@(o+1)</td>
				<td id="@(tm.team)" style="vertical-align:middle;">
					<a href="/dash/team/?teamnum=@(tm.team)">@tm.team</a>
				</td>

				@if (tm.checkboxAverages.Count <= 0 || tm.counterAverages.Count <= 0)
				{
					for (var i = 2; i < c; i++)
					{
						<td style="vertical-align:middle;">-</td>
					}
				}

				@foreach (var a in tm.checkboxAverages)
				{
					<td style="vertical-align:middle;">@(Math.Round(a * 100))%</td>
				}

				@foreach (var a in tm.counterAverages)
				{
					<td style="vertical-align:middle;">@a</td>
				}

				<!--if (tm.rounds.Count > 0)
				{
					<td style="font-size:16px;">tm.pitComments</td>
				}-->
			</tr>
		}
	</table>
</div><!--
<div id="chartContainer" style="height: 370px;width: 50%;float: right;"></div>
<script>
	window.onload = function () {
		var font = "Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji";
		var chart = new CanvasJS.Chart("chartContainer", {
			animationEnabled: true,
			theme: "light2",
			title: {
				text: "Balls High vs Low",
				fontFamily: font
			},
			axisX: {
				title: "Balls High",
				titleFontFamily: font,
				labelFontFamily: font
			},
			axisY: {
				title: "Balls Low",
				titleFontFamily: font,
				labelFontFamily: font
			},
			legend: {
				cursor: "pointer"
			},
			data: [
				{
					String str = "";
					for (var i = 0; i < ViewBag.graphData.Count; i++)
					{
						str += "{type: \"scatter\", name: \"" + ViewBag.graphData[i].Name + "\", markerType: \"circle\", showInLegend: false, toolTipContent: \"<span>{name}</span><br>Balls High: {x}<br>Balls Low: {y}\", dataPoints: [{x: " + ViewBag.graphData[i].X + ", y:" + ViewBag.graphData[i].Y + " }]}";
						if (i < ViewBag.graphData.Count - 1)
						{
							str += ",";
						}
					}
					Html.Raw(str);
				}
			]
		});
		chart.render();

	}
</script>-->