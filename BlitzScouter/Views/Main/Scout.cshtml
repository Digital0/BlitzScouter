@{
	ViewData["Title"] = "Scout";
}
@model BlitzScouter.Models.BSRaw

@using (Html.BeginForm("Data", "Main", FormMethod.Post, new { onsubmit = "increment();" }))
{
	<button type="button" id="header" onclick="document.documentElement.requestFullscreen()">@Model.team</button>
	<div id="content">

		@{
			Model.checkboxes = new List<bool>();
			Model.counters = new List<int>();
		}

		@Html.HiddenFor(m => m.team)
		@Html.HiddenFor(m => m.color)
		@Html.HiddenFor(m => m.round)

		@{
			// Initialize Variables
			int checkboxCounter = 0;
			int counterCounter = 0;

			// Iterate Through Each Component
			foreach (BlitzScouter.Models.Component t in BSConfig.c.matchScout)
			{
				switch (t.type)
				{
					case "header":
						<div class="center">
							<div class="title">@t.text</div>
						</div>
						break;
					case "desc":
						<div class="center">
							<p>@t.text</p>
						</div>
						break;
					case "checkbox":
						Model.checkboxes.Add(t.def != 0);
						<div class="center">
							<div class="checkbox"> @t.text @Html.CheckBoxFor(m => m.checkboxes[checkboxCounter]) </div>
						</div>
						checkboxCounter++;
						break;
					case "counter":
						Model.counters.Add(t.def);
						@Html.HiddenFor(m => m.counters[counterCounter], new { id = "cnt" + counterCounter + "val" })
						<div class="center">
							<div class="counter"> <div class="counterDsp" id="cnt@(counterCounter)disp">0</div> <input type="button" class="counterBtn" value="+" onclick="changeCounters(@(counterCounter), 1, @(t.min), @(t.max))"> <input type="button" class="counterBtn" value="-" onclick="changeCounters(@(counterCounter), -1, @(t.min), @(t.max))"> <div class="counterTxt"> @t.text </div> </div>
						</div>
						counterCounter++;
						break;
					case "text":

						break;
				}
			}
		}

		@Html.TextBoxFor(model => model.comments, new { @class="txtBox", placeholder = "Comments" })
	</div>

		<input type="submit" id="footer" value="Send Data" />
}
