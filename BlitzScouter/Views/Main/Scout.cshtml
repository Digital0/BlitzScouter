@{
	ViewData["Title"] = "Scout";
}
@model BlitzScouter.Models.BSRaw

@using (Html.BeginForm("Data", "Main", FormMethod.Post))
{
	<input type="button" id="header" value="@Model.team" />
	<div id="content">
		@{
			Html.HiddenFor(m => m.team);
			Html.HiddenFor(m => m.color);
			Html.HiddenFor(m => m.round);

			// Initialize Array Values
			int checkboxCounter = 0;
			int counterCounter = 0;
			Model.checkboxes = new bool[ViewBag.config.checkboxCounter];
			Model.counters = new int[ViewBag.config.counterCounter];

			// Iterate Through Each Component
			foreach (BlitzScouter.Models.Type t in ViewBag.config.components)
			{
				switch (t.type)
				{
					case "header":
						<div class="center">
							<div class="title">@t.title</div>
						</div>
						break;
					case "checkbox":
						<div class="center">
							<div class="checkbox"> @t.title @Html.CheckBoxFor(m => m.checkboxes[checkboxCounter]) </div>
						</div>
						checkboxCounter++;
						break;
					case "counter":
						<div class="center">
							<div class="counter"> @Html.HiddenFor(m => m.counters[counterCounter], new { id = "cnt" + counterCounter }) <div class="counterDsp" id="cnt@(counterCounter)disp">0</div> <input type="button" class="counterBtn" value="+" onclick="change('cnt@(counterCounter)', 1, @(((BlitzScouter.Models.Counter) t).min), @(((BlitzScouter.Models.Counter) t).max))"> <input type="button" class="counterBtn" value="-" onclick="change('cnt@(counterCounter)', -1, @(((BlitzScouter.Models.Counter) t).min), @(((BlitzScouter.Models.Counter) t).max))"> <div class="counterTxt"> @t.title </div> </div>
						</div>
						counterCounter++;
						break;
				}
			}

			// Comments Field
			Html.TextBoxFor(model => model.comments, new { id = "comments" });
		}
	</div>
	
		<input type="submit" id="footer" value="Send Data" />
}